name: Build docker image and run node tests (GHCR)

on:
  push:
    branches: [ develop, main, fork_8 ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional image tag to publish (defaults to branch name or short SHA fallback)'
        required: false
        type: string

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
# Avoid parallel builds for the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
  
jobs:
  build-docker:
    runs-on: [self-hosted, linux, X64, hc]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true  # replaces manual submodule init/update

      # Derive image tags/labels
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # latest if the push is to develop
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/develop' }}
            # always short sha
            type=sha,format=short
            # if the event is a tag, use semver (remove the 'v' if it exists)
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (executor)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-GHA
          platforms: linux/amd64
          target: executor
          push: true
          # BuildKit cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # SLSA provenance & SBOM (if supported by your Buildx builder)
          provenance: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # node-tests:
  #   needs: build-docker
  #   uses: 0xPolygonHermez/zkevm-node/.github/workflows/test-from-prover.yml@develop
  #   with:
  #     prover_image: ${{ needs.build-docker.outputs.image_tag }}
  #   secrets:
  #     # If GHCR package is private, that workflow needs a token with read:packages to docker login ghcr.io
  #     GHCR_READ_TOKEN: ${{ secrets.GITHUB_TOKEN }}
